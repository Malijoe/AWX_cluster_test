---

- name: gather info
  block:
    - name: list organizations
      uri:
        url: "{{ awx_url }}/api/v2/organizations/"
        method: GET
        force_basic_auth: yes
        user: "{{ awx_user }}"
        password: "{{ awx_password }}"
      register: orgs

    - name: list credentials
      uri:
        url: "{{ awx_url }}/api/v2/credentials"
        method: GET
        force_basic_auth: yes
        user: "{{ awx_user }}"
        password: "{{ awx_password }}"
      register: creds
      when: project.credential is defined and project.credential != ""

    - name: get inventory info
      uri:
        url: "{{ awx_url }}/api/v2/inventories/"
        method: GET
        force_basic_auth: yes
        user: "{{ awx_user }}"
        password: "{{ awx_password }}"
      register: inventories

- name: set project name as git repo name
  set_fact:
    project_name: '{{ project.scm_url | regex_search("([^\/]+)(?=\.\w+$)") }}'

- name: create project
  block:
    - name: template project_template
      template:
        src: project_template.json.j2
        dest: "{{ temp_dir }}/project_template.json"

    - name: API request to create project
      uri:
        url: "{{ awx_url }}/api/v2/projects/"
        method: POST
        force_basic_auth: yes
        user: "{{ awx_user }}"
        password: "{{ awx_password }}"
        body_format: json
        body: "{{ lookup('file', '{{ temp_dir }}/project_template.json') }}"
        status_code: 201, 400
      register: info
      when: org_id is defined
  vars:
    org_id: "{{ orgs | json_query(\"json.results[?name=='\" + project.organization + \"'].id\") | first }}"
    cred_id: "{% if project.credential is defined and project.credential != '' %}{{ creds | json_query(\"json.results[?name=='\" + project.credential + \"'].id\") | first }}{% else %}{% endif %}"

- name: get project_id on status code 201
  set_fact:
    project_id: "{{ info.json.id }}"
  when: info.status == 201

- name: get project_id on status code 400
  block:

    - name: adjust for when project already exists
      block:
        - debug:
            msg: "{{ response_message.__all__ }} Task will continue anyway"

        - name: List projects
          uri:
            url: "{{ awx_url }}/api/v2/projects"
            method: GET
            force_basic_auth: yes
            user: "{{ awx_user }}"
            password: "{{ awx_password }}"
          register: prjs
      when: response_message.__all__ is defined and response_message.__all__ is search('already exists')

    - fail:
        msg: "{{ response_message }}"
      when: response_message.__all__ is not defined or ((response_message.__all__ is search('already exists')) != True)
  when: info.status == 400
  vars:
    response_message: "{{ info.json }}"

- name: create templates w/o surveys
  block:

    - name: create templates
      include_tasks: create_template.yml
      loop: "{{ template_config_paths }}"
      loop_control:
        loop_var: path
      vars:
        with_survey: False
      when: template_config_paths is defined

    - name: create templates
      include_tasks: create_template.yml
      loop: "{{ templates_with_surveys }}"
      loop_control:
        loop_var: path
      vars:
        with_survey: True
      when: templates_with_surveys is defined

  when: template_config_paths is defined or templates_with_surveys is defined
  vars:
    project_id: "{% if info.status == 201 %}{{ info.json.id }}{% elif prjs is defined %}{{ prjs | json_query(\"json.results[?name=='\" + project_name + \"'].id\") | first }}{% else %}{% endif %}"
